"""empty message

Revision ID: 76ecf26364fa
Revises: 1cdaf48a8edd
Create Date: 2024-05-27 12:12:09.593601

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "76ecf26364fa"
down_revision: Union[str, None] = "1cdaf48a8edd"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "checks",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("events", sa.JSON(), nullable=False),
        sa.Column("date", sa.DateTime(), nullable=False),
        sa.Column("total", sa.Integer(), nullable=False),
        sa.Column("is_payed", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_table("tickets")
    op.add_column("bookings", sa.Column("check_id", sa.Integer(), nullable=False))
    op.add_column("bookings", sa.Column("cost", sa.Integer(), nullable=False))
    op.add_column("bookings", sa.Column("is_valid", sa.Boolean(), nullable=False))
    op.create_foreign_key(None, "bookings", "checks", ["check_id"], ["id"])
    op.drop_column("bookings", "is_payed")
    op.drop_column("bookings", "date")
    op.add_column("events", sa.Column("places_left", sa.Integer(), nullable=False))
    op.add_column("events", sa.Column("poster_path", sa.String(), nullable=True))
    op.add_column("users", sa.Column("avatar_path", sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("users", "avatar_path")
    op.drop_column("events", "poster_path")
    op.drop_column("events", "places_left")
    op.add_column(
        "bookings",
        sa.Column("date", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "bookings",
        sa.Column("is_payed", sa.BOOLEAN(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "bookings", type_="foreignkey")
    op.drop_column("bookings", "is_valid")
    op.drop_column("bookings", "cost")
    op.drop_column("bookings", "check_id")
    op.create_table(
        "tickets",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("booking_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["booking_id"], ["bookings.id"], name="tickets_booking_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="tickets_pkey"),
    )
    op.drop_table("checks")
    # ### end Alembic commands ###
