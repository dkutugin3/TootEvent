"""empty message

Revision ID: 60c22b5be62a
Revises: b953e79f174e
Create Date: 2024-05-28 14:54:35.058960

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "60c22b5be62a"
down_revision: Union[str, None] = "b953e79f174e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("events", sa.Column("city", sa.String(), nullable=False))
    op.add_column("events", sa.Column("place", sa.String(), nullable=False))
    op.alter_column(
        "events",
        "genre",
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        nullable=False,
    )
    op.alter_column("events", "rating", existing_type=sa.INTEGER(), nullable=False)
    op.drop_column("events", "location")
    op.drop_column("events", "poster_path")
    op.drop_column("users", "avatar_path")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column("avatar_path", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "events",
        sa.Column("poster_path", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "events",
        sa.Column(
            "location",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.alter_column("events", "rating", existing_type=sa.INTEGER(), nullable=True)
    op.alter_column(
        "events",
        "genre",
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        nullable=True,
    )
    op.drop_column("events", "place")
    op.drop_column("events", "city")
    # ### end Alembic commands ###
